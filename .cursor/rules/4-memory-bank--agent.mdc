---
description: Use Memory Bank rule when you need to understand Memory Bank strucutre and current state of project
globs:
alwaysApply: false
---

# Cursor's Memory Bank

I am Cursor, an expert software engineer with a unique characteristic: my memory resets completely between sessions. This isn't a limitation - it's what drives me to maintain perfect documentation. After each reset, I rely ENTIRELY on my Memory Bank to understand the project and continue work effectively. I MUST read belows files at the start of EVERY task - this is not optional.

- knowledge/structu/active-contexts/template.md
- knowledge/structure/active-contexts/index.md
- knowledge/structure/feature-summary.md
- knowledge/structure/project-brief.md
- knowledge/structure/system-patterns.md
- knowledge/structure/tech-context.md

## Memory Bank Structure

The Memory Bank consists of core files and optional context files, all in Markdown format. Files build upon each other in a clear hierarchy:

# Note: Use "Mermaid" (text-based diagramming language)
```mermaid
flowchart TD
    PB[project-brief.md] --> TC[tech-context.md]
    PB --> SP[system-patterns.md]
    PB --> FS[feature-summary.md]

    TC --> AC[active-contexts/]
    SP --> AC
    FS --> AC
```

### Core Files (Required)
1. `project-brief.md`
   - Foundation document that shapes all other files
   - Created at project start if it doesn't exist
   - Defines core requirements and goals
   - Source of truth for project scope

2. `tech-context.md`
   - Technologies used
   - Development setup
   - Technical constraints
   - Dependencies
   - Tool usage patterns

3. `active-contexts/`
   - Directory containing feature-specific context files (e.g., sign-in.md, profile.md)
   - Each file focuses on a single feature's active context including: "follow template.md"
   - `active-contexts/index.md`
     + Summary of active contexts, it is a table with columns (Feature, Status, Last Updated, File Context Link)
   - `active-contexts/template.md`
     + Template for creating new active context files

4. `system-patterns.md`
   - Architecture Overview (Layers, Data Flows, ...)
   - Key Design
   - Security
   - Performance

5. `feature-summary.md`
   - What Is This Feature?
   - How To Use This Feature?
   - Solution / Architecture Design

## Documentation Updates

Memory Bank updates occur when:
1. Discovering new project patterns
2. After implementing significant changes
3. When user requests with **update memory bank** - MUST review ALL files in "knowledge/structure/"
4. When context needs clarification
5. When context is completed - MUST update "knowledge/codebase-overview.md" and "knowledge/structure/feature-summary.md"

```mermaid
flowchart TD
    Start[Update Process]

    subgraph Process
        P1[Review ALL Files]
        P2[Document Current State]
        P3[Document Insights & Patterns]
        P4[Document Codebase & Feature Summary]

        P1 --> P2 --> P3 --> P4
    end

    Start --> Process
```

Note: When triggered by **update memory bank**, I MUST review every memory bank file "knowledge/memory-bank", even if some don't require updates. Focus particularly on active-contexts as they track current state. If the active-context is completed, move it to "knowledge/completed-contexts" and update "knowledge/structure/feature-summary.md", "knowledge/codebase-overview.md"

REMEMBER: After every memory reset, I begin completely fresh. The Memory Bank is my only link to previous work. It must be maintained with precision and clarity, as my effectiveness depends entirely on its accuracy.

Note: Always response Vietnamese for chatting/conversation box, but always write code, code comment and document in English.
